Streams

Are:
  interfaces for shuffling data around 
  i/o glue 

For example:
  use compression
  transformations to build data pipelines  - pipes 

Origins: 
  We should have some ways of connecting programs like garden hose-screw in another segment when it becomes 
  neccessary to massage data in another way. This is the way of IO also. 
  - Doug McIlroy Oct 11, 1964, bell-labs (Pipes)

Why? 
  - we can compose streaming abstractions (cs)
  - we can operatre on data chunk by chunk 

Composition 
  - Just like how in unix we can pipe commands together: 
    $ <mobydick.txt.gz gunzip | sed -r 's/\s+/\n/g' | grep -i whale | wc -l 

  - Node
  fs.createReadStream('mobydick.txt.gz')
    .pipe(zlib.createGunzip())
    .pipe(replace(/\s+/g, '\n'))
    .pipe(fileter(/whale/i))
    .pipe(linecount(console.log))
